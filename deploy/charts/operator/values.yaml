# This is to override the chart name.
nameOverride: ""
fullnameOverride: "toolhive-operator"

# All values for the operator deployment and associated resources
operator:

  # This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
  replicaCount: 1

  # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
  imagePullSecrets: []
  image: ghcr.io/hawkli-1994/toolhive/operator:latest
  imagePullPolicy: IfNotPresent

  ports:
  - containerPort: 8080
    name: metrics
    protocol: TCP
  - containerPort: 8081
    name: health
    protocol: TCP

  # This is for setting Kubernetes Annotations to a Pod.
  # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  podAnnotations: {}
  # This is for setting Kubernetes Labels to a Pod.
  # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  podLabels: {}

  podSecurityContext:
    runAsNonRoot: true

  containerSecurityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 1000
    capabilities:
      drop:
      - ALL

    # This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  livenessProbe:
    httpGet:
      path: /healthz
      port: health
    initialDelaySeconds: 15
    periodSeconds: 20
  readinessProbe:
    httpGet:
      path: /readyz
      port: health
    initialDelaySeconds: 5
    periodSeconds: 10

  # This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  resources:
    limits:
      cpu: 500m
      memory: 128Mi
    requests:
      cpu: 10m
      memory: 64Mi

  # This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Automatically mount a ServiceAccount's API credentials?
    automountServiceAccountToken: true
    # Annotations to add to the service account
    annotations: {}
    # Labels to add to the service account
    labels: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: "toolhive-operator"

  leaderElectionRole:
    name: toolhive-operator-leader-election-role
    binding:
      name: toolhive-operator-leader-election-rolebinding
    rules:
    - apiGroups:
      - ""
      resources:
      - configmaps
      verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
    - apiGroups:
      - coordination.k8s.io
      resources:
      - leases
      verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
    - apiGroups:
      - ""
      resources:
      - events
      verbs:
      - create
      - patch

  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  nodeSelector: {}

  tolerations: []

  affinity: {}

# specific values for resources related to the toolhive pods. not related to the operator.
toolhive:
  rbac:
    enabled: true
    serviceAccount:
      name: toolhive
    role:
      name: toolhive
      bindingName: toolhive-binding
      rules:
        # StatefulSet management
        - apiGroups: ["apps"]
          resources: ["statefulsets"]
          verbs: ["get", "list", "watch", "create", "update", "patch", "delete", "apply"]
        
        # Service management
        - apiGroups: [""]
          resources: ["services"]
          verbs: ["get", "list", "watch", "create", "update", "patch", "delete", "apply"]
        
        # Pod management
        - apiGroups: [""]
          resources: ["pods"]
          verbs: ["get", "list", "watch"]
        
        # Pod logs
        - apiGroups: [""]
          resources: ["pods/log"]
          verbs: ["get"]
        
        # Pod attach (for attaching to containers)
        - apiGroups: [""]
          resources: ["pods/attach"]
          verbs: ["create", "get"]
