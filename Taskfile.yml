version: '3'

tasks:
  lint:
    desc: Run linting tools
    cmds:
      - golangci-lint run ./...
      - go vet ./...

  lint-fix:
    desc: Run linting tools, and apply fixes.
    cmds:
      - golangci-lint run --fix ./...

  test:
    desc: Run tests
    cmds:
      - go test -v ./...

  test-coverage:
    desc: Run tests with coverage analysis
    cmds:
      - mkdir -p coverage
      - go test -coverprofile=coverage/coverage.out ./...
      - go tool cover -func=coverage/coverage.out
      - echo "Generating HTML coverage report in coverage/coverage.html"
      - go tool cover -html=coverage/coverage.out -o coverage/coverage.html

  build:
    desc: Build the binary
    cmds:
      - mkdir -p bin
      - go build -o bin/thv ./cmd/thv

  install:
    desc: Install the thv binary to GOPATH/bin
    cmds:
      - go install -v ./cmd/thv

  all:
    desc: Run linting, tests, and build
    deps: [lint, test, build]

  all-with-coverage:
    desc: Run linting, tests with coverage, and build
    deps: [lint, test-coverage, build]

  build-image:
    desc: Build the image with ko
    cmds:
      - ko build --platform linux/amd64,linux/arm64 --local ./cmd/thv

  test-k8s-apply:
    desc: Builds the image, loads it into kind, and applies the Kubernetes manifests
    vars:
      IMAGE:
        sh: ko build --platform linux/amd64 --local -B ./cmd/thv | tail -n 1
    cmds:
      # Load the image into kind
      - echo "Loading image {{.IMAGE}} into kind..."
      - kind load docker-image {{.IMAGE}}
      # Apply the Kubernetes manifest
      - echo "Applying Kubernetes manifest..."
      - kubectl apply -f <(KO_DOCKER_REPO=kind.local ko resolve --platform linux/amd64 -f deploy/k8s/thv.yml)
      # Wait for the deployment to be available
